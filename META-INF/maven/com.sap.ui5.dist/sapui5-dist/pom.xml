<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	

	<!--**************************************************************************
	* POM SECTION: Maven Model Version Settings
	***************************************************************************-->

	<modelVersion>4.0.0</modelVersion>
	
	
	<!--**************************************************************************
	* POM SECTION: Parent POM Settings
	***************************************************************************-->

	<parent>
		<groupId>com.sap.ui5.dist</groupId>
		<artifactId>maven-webapp-pom</artifactId>
		<version>1.34.3</version>
		<relativePath>../poms/webapp/pom.xml</relativePath>
	</parent>


	<!--**************************************************************************
	* POM SECTION: Maven Settings
	***************************************************************************-->

	<artifactId>sapui5-dist</artifactId>
	<packaging>war</packaging>


	<!--**************************************************************************
	* POM SECTION: Project Settings
	***************************************************************************-->

	<name>${project.artifactId}</name>
	<description>SAPUI5 - Content Delivery Network Deployable</description>
	

	<!--**************************************************************************
	* POM SECTION: Properties Settings
	***************************************************************************-->

	<properties>
	
		<!-- Eclipse WTP Settings -->
		<web.context.name>sapui5-dist</web.context.name>

	</properties>


	<!--**************************************************************************
	* POM SECTION: Build Settings
	***************************************************************************-->

	<build>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includes>META-INF/resources/sap-ui-core-all.js,META-INF/resources/**/library-all.js,META-INF/resources/**/library.dependencies.xml</includes>
							<excludeTypes>pom</excludeTypes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- launch the external ANT build (to synchronize Maven and Japro) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>mvn-antrun-compile</id>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<!-- import the ant-contrib tasks into ANT -->
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
								<taskdef resource="com/sap/ui5/tools/build/ant/antlib.xml" classpathref="maven.plugin.classpath"/>
								<module name="sap-ui5" source="${basedir}/target/dependency/META-INF/resources" target="${basedir}/target/${web.context.name}/resources" verbose="true" listedModulesOnly="true"> 
									<module name="sap-ui-core-all" mode="raw" />
									<module name="sap.ui.commons.library-all" />
									<module name="sap.ui.table.library-all" />
									<module name="sap.ui.ux3.library-all" />
								</module>
								<xslt 
									style="${basedir}/tools/dep2graph.xslt" 
									basedir="${basedir}/target/dependency/META-INF/resources" includes="**/library.dependencies.xml" 
									destdir="${basedir}/target/depgraph" extension=".graphml" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>

				<!-- WORKAROUND                                                                        -->
				<!-- The maven-antrun-plugin evaluates the plugin dependencies only in the very first  -->
				<!-- POM that uses the maven-antrun-plugin. To avoid inconsistencies depending on what -->
				<!-- tree of POMS is currently build, we have to configure __ALL__ usages of the       -->
				<!-- maven-antrun-plugin consistently                                                  -->
				<!-- See: http://jira.codehaus.org/browse/MANTRUN-95                                   -->
				<dependencies>
					<!-- use latest ANT version for antrun plugin -->
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.7.1</version>
					</dependency>
					<!-- extensions for ANT (e.g. if conditions, ...) -->
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-trax</artifactId>
						<version>1.7.1</version>
					</dependency>
					<!-- UI5 generator and its dependencies -->
					<dependency>
						<groupId>com.sap.ui5.tools.build</groupId>
						<artifactId>generator</artifactId>
						<version>${sap.ui5.core.version}</version>
					</dependency>
					<dependency>
						<groupId>com.sap.ui5.tools.build</groupId>
						<artifactId>metamodel</artifactId>
						<version>${sap.ui5.core.version}</version>
					</dependency>
					<dependency>
						<groupId>com.sap.ui5.tools.build</groupId>
						<artifactId>theming</artifactId>
						<version>${sap.ui5.core.version}</version>
					</dependency>
				</dependencies>
			</plugin>
	
			<!-- create a version info file in JSON format -->
			<plugin>
				<groupId>com.sap.ui5.tools.build</groupId>
				<artifactId>maven-coldwater-plugin</artifactId>
				<executions>
					<execution>
						<id>create-version-info-json</id>
						<phase>compile</phase>
						<goals>
							<goal>version-info</goal>
						</goals>
						<configuration>
							<targetFolder>${project.build.directory}/webapp/resources</targetFolder>
							<format>JSON</format>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- changed the source directory of the webapp to the generated one -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>default-war</id>
						<goals>
							<goal>war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}/webapp</directory>
								</resource>
							</webResources>
						</configuration>
					</execution>
					<execution>
						<id>nwjava</id>
						<goals>
							<goal>war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<webappDirectory>${project.build.directory}/${project.build.finalName}-nwjava</webappDirectory>
							<classifier>nwjava</classifier>
							<webResources>
								<!-- src/main/webapp-nwjava > src/main/webapp (first one wins!) -->
								<resource>
									<directory>src/main/webapp-nwjava</directory>
								</resource>
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}/webapp</directory>
								</resource>
								<!-- ui5.properties are created by the maven-webapp-pom in the original WAR directory! -->
								<resource>
									<directory>${project.build.directory}/${project.build.finalName}</directory>
									<includes>
										<include>META-INF/ui5.properties</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</execution>
					<execution>
						<id>hanacloud</id>
						<goals>
							<goal>war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<webappDirectory>${project.build.directory}/${project.build.finalName}-hanacloud</webappDirectory>
							<classifier>hanacloud</classifier>
							<webResources>
								<!-- src/main/webapp-hanacloud > src/main/webapp (first one wins!) -->
								<resource>
									<directory>src/main/webapp-hanacloud</directory>
								</resource>
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}/webapp</directory>
								</resource>
								<!-- ui5.properties are created by the maven-webapp-pom in the original WAR directory! -->
								<resource>
									<directory>${project.build.directory}/${project.build.finalName}</directory>
									<includes>
										<include>META-INF/ui5.properties</include>
									</includes>
								</resource>
							</webResources>
							<archive>
								<manifestEntries>
									<Web-ContextPath>/</Web-ContextPath>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.sap.ui5.tools.maven</groupId>
				<artifactId>lightening-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-light</id>
						<phase>package</phase>
						<goals>
							<goal>lighten</goal>
						</goals>
						<configuration>
							<warClassifier>static</warClassifier>
							<zipClassifier>static</zipClassifier>
						</configuration>
					</execution>
					<execution>
						<id>attach-light-nwjava</id>
						<phase>package</phase>
						<goals>
							<goal>lighten</goal>
						</goals>
						<configuration>
							<srcWarFile>${project.build.directory}/${project.build.finalName}-nwjava.war</srcWarFile>
							<warClassifier>nwjava-static</warClassifier>
							<createZip>false</createZip><!-- not needed -->
						</configuration>
					</execution>
				</executions>
				<configuration>
					<themeFallback>		
						<!-- fallback from hcb to base for all libraries -->
						sap_hcb, 
				
						<!-- fallback from goldreflection to base for desktop libs only -->
						sap_goldreflection:sap/ui/;sap/uiext/;sap/viz/, 
						
						<!-- fallback from platinum (and ux) only for old desktop libs -->
						sap_platinum:sap/ui/core/;sap/ui/commons/;sap/ui/table/,
						<!-- sap_ux:sap/ui/core/;sap/ui/commons/;sap/ui/table/, -->
						
						<!-- full fallback for sap_bluecrystal -->
						sap_bluecrystal, 
						
						<!-- fallback for sap_mvi only for mobile libs -->
						sap_mvi:sap/ui/core/;sap/m/;sap/me/;sap/makit/
					</themeFallback>
				</configuration>
			</plugin>
		
		</plugins>
	
	</build>
	
	
	<!--**************************************************************************
	* POM SECTION: Profiles Settings
	***************************************************************************-->

	<profiles>

		<profile>
			<id>optimized.build</id>
			<activation>
				<property>
					<name>ldi.releaseBuild</name>
				</property>
			</activation>

			<build>

				<plugins>

					<plugin>
						<groupId>com.sap.ui5.tools.maven</groupId>
						<artifactId>lightening-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-light</id>
								<configuration>
									<warClassifier>static,opt-static</warClassifier>
									<zipClassifier>static,opt-static</zipClassifier>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>

	</profiles>


	<!--**************************************************************************
	* POM SECTION: Dependency Settings
	***************************************************************************-->

	<dependencies>

		<!-- UI5 runtime -->
		<dependency>
			<groupId>com.sap.ui5.dist</groupId> 
			<artifactId>runtime-collection</artifactId> 
			<version>${project.version}</version> 
			<type>pom</type>
			<exclusions>
				<!-- exclude open source stuff which is only needed for the proxy testcase -->
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
				<!-- exclude open source stuff which is only needed for the file upload testcase -->
				<exclusion>
					<groupId>commons-fileupload</groupId>
					<artifactId>commons-fileupload</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-io</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- UI5 libraries -->
		<dependency>
			<groupId>com.sap.ui5.dist</groupId>
			<artifactId>uilib-collection</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>com.sap.ui5.dist</groupId>
			<artifactId>fiori-lib</artifactId>
			<version>${project.version}</version>
		</dependency>
	
		<!-- ABAP runtime library (for release notes) -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sap.ui.server.abap</artifactId>
			<version>${project.version}</version> 
		</dependency>

	</dependencies>


</project>
